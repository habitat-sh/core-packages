#!/bin/bash

exec 2>&1

cd {{pkg.svc_path}}

advertise_address="{{sys.ip}}"

if [[ -n "{{cfg.advertise-address}}" ]]; then
  advertise_address="{{cfg.advertise-address}}"
fi

exec kube-apiserver \
  --enable-admission-plugins=Initializers,NamespaceLifecycle,NodeRestriction,LimitRanger,ServiceAccount,DefaultStorageClass,ResourceQuota,AlwaysPullImages \
  --advertise-address="${advertise_address}" \
  --allow-privileged=true \
  --enable-swagger-ui=true \
  --audit-log-maxage=30 \
  --audit-log-maxbackup=3 \
  --audit-log-maxsize=100 \
  --audit-log-path=/var/log/audit.log \
  --authorization-mode=Node,RBAC \
  --bind-address="{{cfg.bind-address}}" \
  --client-ca-file="{{cfg.client-ca-file}}" \
  --etcd-cafile="{{cfg.etcd-cafile}}" \
  --etcd-certfile="{{cfg.etcd-certfile}}" \
  --etcd-keyfile="{{cfg.etcd-keyfile}}" \
  --etcd-servers="{{cfg.etcd-servers}}" \
  --event-ttl=1h \
  --kubelet-certificate-authority="{{cfg.kubelet-certificate-authority}}" \
  --kubelet-client-certificate="{{cfg.kubelet-client-certificate}}" \
  --kubelet-client-key="{{cfg.kubelet-client-key}}" \
  --kubelet-https=true \
  --requestheader-client-ca-file="{{cfg.requestheader-client-ca-file}}" \
  --requestheader-group-headers="{{cfg.requestheader-group-headers}}" \
  --requestheader-username-headers="{{cfg.requestheader-username-headers}}" \
  --runtime-config=api/all \
  --service-account-key-file="{{cfg.service-account-key-file}}" \
  --service-cluster-ip-range="{{cfg.service-cluster-ip-range}}" \
  --service-node-port-range="{{cfg.service-node-port-range}}" \
  --tls-cert-file="{{cfg.tls-cert-file}}" \
  --tls-private-key-file="{{cfg.tls-private-key-file}}" \
  --v="{{cfg.verbosity}}"
